name: Build

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      project-version:
        required: true
        type: string

jobs:
  build:
    name: 'Build ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Add msbuild to PATH
        if: ${{ matrix.os == 'windows-latest' }}
        uses: microsoft/setup-msbuild@v1.1.3

      - name: Version
        shell: bash
        run: |
          sed -i -e "s/^project.helloworld VERSION 0.0.0/project\(helloworld VERSION ${{ inputs.project-version }}/g" CMakeLists.txt

      - name: Build
        shell: bash
        run: |
          cmake .
          cmake --build .

      - name: Assemble
        uses: jreleaser/release-action@v2
        with:
          arguments: assemble
        env:
          JRELEASER_PROJECT_VERSION: ${{ inputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-assemble-${{ runner.os }}-${{ runner.arch }}
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: artifact-${{ runner.os }}-${{ runner.arch }}
          path: |
            out/jreleaser/assemble/helloworld/archive/*.zip
